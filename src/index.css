@tailwind base;
@tailwind components;
@tailwind utilities;

/* Base settings to prevent white flashes */
html,
body {
  background-color: black;
  min-height: 100vh;
  overflow-x: hidden;
}

/* Loading screen animations */
@keyframes fadeIn {
  from {
    opacity: 0;
    transform: translateY(10px);
  }
  to {
    opacity: 1;
    transform: translateY(0);
  }
}

.animate-fadeIn {
  animation: fadeIn 0.5s ease-out;
}

.matrix-rain {
  background: repeating-linear-gradient(
    0deg,
    transparent,
    transparent 2px,
    rgba(0, 255, 0, 0.03) 2px,
    rgba(0, 255, 0, 0.03) 4px
  );
  animation: matrix 20s linear infinite;
  height: 200%;
}

.cyber-grid {
  background-image:
    linear-gradient(rgba(0, 255, 0, 0.1) 1px, transparent 1px),
    linear-gradient(90deg, rgba(0, 255, 0, 0.1) 1px, transparent 1px);
  background-size: 30px 30px;
}

.scanning-lines {
  background: linear-gradient(
    90deg,
    transparent,
    rgba(0, 255, 0, 0.1),
    transparent
  );
  animation: scan 3s linear infinite;
}

@keyframes matrix {
  0% {
    transform: translateY(-100%);
  }
  100% {
    transform: translateY(100%);
  }
}

@keyframes glitch {
  0% {
    clip-path: inset(40% 0 61% 0);
    transform: translate(-2px, 2px);
  }
  20% {
    clip-path: inset(52% 0 42% 0);
    transform: translate(1px, -3px);
  }
  40% {
    clip-path: inset(20% 0 78% 0);
    transform: translate(3px, 1px);
  }
  60% {
    clip-path: inset(25% 0 58% 0);
    transform: translate(-3px, -2px);
  }
  80% {
    clip-path: inset(75% 0 20% 0);
    transform: translate(2px, 4px);
  }
  100% {
    clip-path: inset(40% 0 61% 0);
    transform: translate(-2px, 2px);
  }
}

@keyframes scan {
  0% {
    transform: translateX(-100%);
  }
  100% {
    transform: translateX(100%);
  }
}

/* Page transition animations */
@keyframes construct {
  0% {
    filter: blur(15px);
    opacity: 0;
    transform: scale(0.95);
  }
  40% {
    filter: blur(8px);
    opacity: 0.4;
  }
  70% {
    filter: blur(3px);
    opacity: 0.7;
    transform: scale(0.98);
  }
  90% {
    filter: blur(1px);
    opacity: 0.9;
  }
  100% {
    filter: blur(0);
    opacity: 1;
    transform: scale(1);
  }
}

@keyframes slideInFromLeft {
  0% {
    transform: translateX(-100px) scale(0.8);
    opacity: 0;
    filter: blur(10px);
  }
  60% {
    filter: blur(2px);
  }
  100% {
    transform: translateX(0) scale(1);
    opacity: 1;
    filter: blur(0);
  }
}

@keyframes slideInFromRight {
  0% {
    transform: translateX(100px) scale(0.8);
    opacity: 0;
    filter: blur(10px);
  }
  60% {
    filter: blur(2px);
  }
  100% {
    transform: translateX(0) scale(1);
    opacity: 1;
    filter: blur(0);
  }
}

/* Mobile responsive animations */
@media (max-width: 640px) {
  @keyframes slideInFromLeft {
    0% {
      transform: translateX(-50px);
      opacity: 0;
    }
    100% {
      transform: translateX(0);
      opacity: 1;
    }
  }

  @keyframes slideInFromRight {
    0% {
      transform: translateX(50px);
      opacity: 0;
    }
    100% {
      transform: translateX(0);
      opacity: 1;
    }
  }
}

@keyframes fadeUp {
  0% {
    transform: translateY(20px);
    opacity: 0;
  }
  100% {
    transform: translateY(0);
    opacity: 1;
  }
}

.cyber-construct {
  animation: construct 1.8s cubic-bezier(0.23, 1, 0.32, 1) forwards;
  background-color: inherit;
  position: relative;
}

.cyber-construct::before {
  content: "";
  position: absolute;
  top: 0;
  left: 0;
  right: 0;
  bottom: 0;
  background: linear-gradient(to bottom, rgba(0, 255, 0, 0.1), transparent);
  opacity: 0;
  animation: construct 2s forwards 0.3s;
  pointer-events: none;
}

.cyber-element-left {
  opacity: 0;
  animation: slideInFromLeft 0.5s cubic-bezier(0.16, 1, 0.3, 1) forwards;
  transform-origin: left center;
  will-change: transform, opacity;
}

.cyber-element-right {
  opacity: 0;
  animation: slideInFromRight 0.5s cubic-bezier(0.16, 1, 0.3, 1) forwards;
  transform-origin: right center;
  will-change: transform, opacity;
}

.cyber-glitch {
  position: relative;
}

.cyber-glitch::before,
.cyber-glitch::after {
  content: attr(data-text);
  position: absolute;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  background: inherit;
}

.cyber-glitch::before {
  animation: glitch 3s infinite linear alternate-reverse;
  color: rgba(0, 255, 0, 0.7);
  z-index: -1;
}

.cyber-glitch::after {
  animation: glitch 2s infinite linear alternate-reverse;
  color: rgba(255, 0, 255, 0.7);
  z-index: -2;
}

/* Section animation classes */
.section-animate {
  opacity: 0;
  transform: translateY(20px);
  transition:
    opacity 0.4s ease-out,
    transform 0.4s ease-out;
  background-color: inherit;
}

.section-animate.active {
  opacity: 1;
  transform: translateY(0);
}

/* Mobile optimizations for animations */
@media (max-width: 768px) {
  .cyber-element-left,
  .cyber-element-right {
    animation-duration: 0.3s;
  }

  .cyber-construct {
    animation-duration: 1s;
  }
}

/* Staggered animation delays */
.stagger-1 {
  animation-delay: 0.1s;
}
.stagger-2 {
  animation-delay: 0.2s;
}
.stagger-3 {
  animation-delay: 0.3s;
}
.stagger-4 {
  animation-delay: 0.4s;
}
.stagger-5 {
  animation-delay: 0.5s;
}

/* Animation prefers-reduced-motion support */
@media (prefers-reduced-motion: reduce) {
  .cyber-construct,
  .cyber-element-left,
  .cyber-element-right,
  .section-animate,
  [class*="stagger-"] {
    animation-duration: 0.1s !important;
    transition-duration: 0.1s !important;
  }

  .cyber-construct {
    filter: none !important;
  }

  .cyber-glitch::before,
  .cyber-glitch::after {
    display: none !important;
  }
}

/* Reveal animation for content blocks */
.reveal-block {
  opacity: 0;
  transform: scale(0.95);
  transition: all 0.8s cubic-bezier(0.165, 0.84, 0.44, 1);
  background-color: inherit;
}

.reveal-block.active {
  opacity: 1;
  transform: scale(1);
}

/* Typed text effect */
.typed-cursor {
  display: inline-block;
  width: 0.5em;
  height: 1.2em;
  background-color: currentColor;
  margin-left: 0.1em;
  animation: blink 0.7s infinite;
}

@keyframes blink {
  0%,
  100% {
    opacity: 1;
  }
  50% {
    opacity: 0;
  }
}

/* Formation animation classes */
.form-in {
  animation: formIn 1s forwards;
}

@keyframes formIn {
  0% {
    opacity: 0;
    transform: perspective(500px) translateZ(-50px);
    filter: blur(8px);
  }
  100% {
    opacity: 1;
    transform: perspective(500px) translateZ(0);
    filter: blur(0);
  }
}

/* Digital grid forming effect */
.grid-form {
  position: relative;
  overflow: hidden;
}

.grid-form::before {
  content: "";
  position: absolute;
  top: 0;
  left: 0;
  right: 0;
  bottom: 0;
  background-image:
    linear-gradient(rgba(0, 255, 0, 0.3) 1px, transparent 1px),
    linear-gradient(90deg, rgba(0, 255, 0, 0.3) 1px, transparent 1px);
  background-size: 20px 20px;
  opacity: 0;
  animation: gridReveal 1.5s cubic-bezier(0.19, 1, 0.22, 1) forwards;
  pointer-events: none;
  z-index: -1;
}

@keyframes gridReveal {
  0% {
    opacity: 0.7;
    background-size: 40px 40px;
  }
  100% {
    opacity: 0;
    background-size: 20px 20px;
  }
}

/* Transition smoothing styles */
.page-transition-container {
  position: fixed;
  top: 0;
  left: 0;
  right: 0;
  bottom: 0;
  background-color: black;
  z-index: 40;
}

.content-container {
  background-color: inherit;
  min-height: 100vh;
  position: relative;
  z-index: 1;
}

/* Animation delay adjustments */
.transition-smoother {
  transition-delay: 0.1s;
  background-color: inherit;
}

/* Scan line effect */
.scan-lines {
  position: relative;
  overflow: hidden;
}

.scan-lines::after {
  content: "";
  position: absolute;
  top: 0;
  left: 0;
  right: 0;
  bottom: 0;
  background: linear-gradient(
    to bottom,
    transparent 50%,
    rgba(0, 255, 0, 0.02) 50%
  );
  background-size: 100% 4px;
  pointer-events: none;
  z-index: 10;
  opacity: 0.5;
}

/* Digital noise effect */
.digital-noise {
  position: relative;
}

.digital-noise::after {
  content: "";
  position: absolute;
  top: 0;
  left: 0;
  right: 0;
  bottom: 0;
  background-image: url("data:image/svg+xml,%3Csvg viewBox='0 0 200 200' xmlns='http://www.w3.org/2000/svg'%3E%3Cfilter id='noise'%3E%3CfeTurbulence type='fractalNoise' baseFrequency='0.65' numOctaves='3' stitchTiles='stitch'/%3E%3C/filter%3E%3Crect width='100%25' height='100%25' filter='url(%23noise)' opacity='0.08'/%3E%3C/svg%3E");
  pointer-events: none;
  z-index: 9;
  opacity: 0;
  animation: noiseIn 2s forwards 0.5s;
}

@keyframes noiseIn {
  0% {
    opacity: 0.2;
  }
  30% {
    opacity: 0.1;
  }
  100% {
    opacity: 0.03;
  }
}
